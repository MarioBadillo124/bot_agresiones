# flows/abiertas_reportes.py

import random
from telegram import Update
from telegram.ext import ContextTypes

PALABRAS_CLAVE_AGRESION = [
    "agresi√≥n", "agresion", "pelea", "violencia", "golpes", "est√°n peleando",
    "peleando", "agredir", "empujando", "pegando", "molestando", "abusando",
    "est√°n molestando", "lastimaron", "amenazando", "burlando", "empuj√≥n", "empujones"
]

RESPUESTAS_AGRESION = [
    "üö® Parece que est√°s describiendo una situaci√≥n de agresi√≥n. Si es urgente, avisa a un docente de inmediato. Tambi√©n puedes usar el bot√≥n üö® *Reportar Agresi√≥n*.",
    "üÜò Gracias por reportarlo. Puedes iniciar un reporte presionando el bot√≥n üö® o escribiendo *reportar* para dar m√°s detalles.",
    "üìç Si viste una pelea o agresi√≥n, es importante dejar constancia. ¬øQuieres iniciar un reporte? Usa el bot√≥n üö®.",
    "‚úã Si te sientes inseguro o presencias una agresi√≥n, al√©jate y avisa a un adulto. Yo tambi√©n puedo ayudarte a reportarlo.",
]

RESPUESTAS_QUE_HAGO = [
    "üìå Si no sabes qu√© hacer ante una agresi√≥n, lo primero es mantener la calma y buscar a un adulto responsable.",
    "üß† Es buena idea reportar lo que viste para que el equipo escolar pueda actuar. Pulsa üö® o dime *reportar*.",
    "üëÅÔ∏è‚Äçüó®Ô∏è Describe lo que est√° pasando o pas√≥. Puedo ayudarte a armar un reporte formal.",
]

async def manejar_preguntas_abiertas(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    texto = update.message.text.lower()

    if any(p in texto for p in PALABRAS_CLAVE_AGRESION):
        await update.message.reply_text(random.choice(RESPUESTAS_AGRESION))
        return True
    
    elif any(p in texto for p in ["qu√© hago", "que hago", "ayuda", "debo hacer", "c√≥mo procedo", "que hago si veo", "qu√© hago si veo"]):
        await update.message.reply_text(random.choice(RESPUESTAS_QUE_HAGO))
        return True
    
    return False  # No respondi√≥ nada

