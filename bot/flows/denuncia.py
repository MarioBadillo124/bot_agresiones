from telegram import Update,ReplyKeyboardMarkup,ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler

# Estados del flujo
ESPERANDO_DESCRIPCION, CONFIRMACION, PREGUNTAR_VOLVER_MENU = range(3)

async def iniciar_denuncia(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Inicia el flujo de denuncia an√≥nima"""
    await update.message.reply_text(
        "‚úâÔ∏è *Denuncia An√≥nima*\n\n"
        "Por favor, describe lo ocurrido (sin mencionar nombres):\n"
        "‚Ä¢ Lugar\n‚Ä¢ Hora aproximada\n‚Ä¢ Hechos\n\n"
        "Ejemplo: _'En el patio a las 12:30, un alumno empuj√≥ a otro'_",
        parse_mode="Markdown"
    )
    return ESPERANDO_DESCRIPCION

async def recibir_descripcion(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Guarda la descripci√≥n y pide confirmaci√≥n"""
    context.user_data["descripcion"] = update.message.text
    await update.message.reply_text(
        "‚ö†Ô∏è *¬øConfirmas enviar esta denuncia an√≥nima?* (S√≠/No)\n\n"
        f"*Descripci√≥n:*\n{update.message.text}",
        parse_mode="Markdown"
    )
    return CONFIRMACION

async def confirmar_denuncia(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Procesa la confirmaci√≥n"""
    if update.message.text.lower() in ["s√≠", "si", "yes"]:
        # Aqu√≠ podr√≠as guardar en una base de datos
        await update.message.reply_text(
            "‚úÖ *Denuncia an√≥nima enviada.*\n"
            "Nadie ver√° tu identidad. Gracias por tu ayuda. *\n"
            "¬øDeseas volver al men√∫ principal?",
            reply_markup=ReplyKeyboardMarkup(
            [["S√≠","s√≠", "si", "yes", "No", "no"]],
            one_time_keyboard=True,
            resize_keyboard=True
        )
        )
    return PREGUNTAR_VOLVER_MENU

async def manejar_volver_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Maneja la decisi√≥n de volver al men√∫ principal."""
    from mi_bot import botones_principales  # Importaci√≥n local para evitar circularidad
    
    texto = update.message.text.lower()
    
    if any(p in texto for p in ["s√≠", "si", "volver"]):
        # Primero enviamos el mensaje de confirmaci√≥n
        await update.message.reply_text(
            "Por favor esribe /start para reiniciar el bot.",
            reply_markup=ReplyKeyboardRemove()  # Limpiamos teclado actual
        )
        
    else:
        await update.message.reply_text(
            "De acuerdo. Puedes continuar con lo que necesites.",
            reply_markup=ReplyKeyboardRemove()
        )
    
    return ConversationHandler.END

async def cancelar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üö´ Operaci√≥n cancelada.")
    return ConversationHandler.END